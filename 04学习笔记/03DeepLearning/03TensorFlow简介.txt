Tensorflow特点：

	1、真正的可移植性

		引入各种计算设备的支持包括CPU/GPU/TPU，以及能够很好地运行在移动端，如安卓设备、ios、树莓派等等

	2、多语言支持

		TensorFloe有一个合理的c++使用界面，也有一个易用的python使用界面来构建和执行你的grphs,你可以直接歇python/c++程序。

	3、高度的灵活性与效率

		Tensorflow是一个采用数据流图(data flow graphs)，用于数值计算的开源软件库能够灵活的进行组装图，执行图。随着开发的进展，Tensorflow的效率不断在提高

	4、支持

		Tensorflow由谷歌提供支持，谷歌投入了大量精力开发TensorFlow,它希望TensorFlow成为机器学习研究人员和开发人员的通用语言



cpu：运行操作系统，处理业务，计算能力不是特别突出

gpu：专门为计算设计      

使用gpu非常简单：只需要一行代码





B站学习笔记：

	图像分类           文本分类


	房价预测           文本生成


	泰坦尼克生存预测    机器翻译



模型训练             Tensorboard(查看模型训练的工具)

模型保存与部署        Tfds/tfhub       
             
分布式训练            tensor2tensor


Tensorflow keras实战：

	tf框架：keras、回调函数

Tensorflow是什么？

	Google的开源软件库

		采用数据流图，用于数值计算

		支持多种平台——GPU、CPU、移动设备

		最初用于深度学习，变得越来越通用

	数据流图：

		节点——处理数据

		线——节点间的输入输出关系

		线上运输张量

		节点被分配到各种计算设备上运行

	特性：

		高度的灵活性

		真正的可移植性

		产品和科研结合

		自动求微分(反向传播)

		多语言支持(python,r,c++)

		性能最优化

Tensorflow版本变迁：

	2015年11月宣布开源

	2017年4月 keras集成

Tensorflow1.0——主要特性

	XLA——Accelerate Linear Algebra 线性支持器

		提升训练速度58倍

		可以在移动设备运行

	引入更高级别的API——tf.layers/tf.metrics/tf.losses/tf.keras

	Tensorflow调试器

	支持docker镜像，引入tensorflow serving服务

Tensorflow2.0——主要特性：

	使用tf.keras和eager mode进行更加简单的模型构建

	鲁棒的跨平台模型部署

	强大的研究实验

	清除不推荐使用的API和减少重复来简化API

Tensorflow2.0——简化的模型开发流程

	使用tf.data加载数据

	使用tf.keras构建模型，也可以使用premade estimator来验证模型

		使用tensorflow hub进行迁移学习

	使用eager mode进行运行和调试

	使用分发策略来进行分布式训练

	导出到SavedModel

	使用Tensorflow Serve、Tensorflow Lite、Tensorflow.js部署模型

Tensorflow2.0——强大的跨平台能力

	Tensorflow 服务

		直接通过HTTP/REST或GRPC/协议缓冲区

	Tensorflow Lite——可部署在Android、IOS和嵌入式系统上

	Tensorflow.js——在javascript中部署模型

	其他语言

		C、java、Go、c#、Rust、Julia、R等

Tensorflow2.0——强大的研究实验能力

	Keras功能API和子类API，允许创建复杂的拓扑结构

	自定义训练逻辑，使用tf.GradientTape和tf.custom_gradient进行更细粒度的控制

	底层API自始至终可以与高层结合使用，完全的可定制

	高级扩展：Ragged Tensors、Tensor2Tensor等



Tensorflow vs PyTorch(facebook)

	入门时间                   

		Tensorflow 1.*                           

			静态图                                

			学习额外概念                           

				图、会话、变量、占位符等

			写样板代码

		Tensorflow 2.0

			动态图

			Eager mode避免1.0缺点，直接集成在python中

		Pytorch

			动态图

			Numpy的扩展，直接集成在python中


		入门时间——图结构

			静态图

				效率高

			动态图

				调试容易

	图创建和调试

		Tensorflow 1.*

			静态图，难以调试，学习tfdbg调试

		Tensorflow 2.0与pytorch

			动态图，python自带调试的工具		


	全面性

		Pytorch缺少：

			沿维度翻转张量(np.flip,np.flipud,np.fliplr)

			检查无穷与非数值张量(np.is_nan,np.is_inf)

			快速傅里叶变换(np.fft)

		随着时间变化，越来越接近

	序列化和部署

		Tensorflow支持更加广泛

			图保存为protocol buffer

			跨语言

			跨平台

		Pytorch支持比较简单
		

